{
  "contractName": "DeedRepository",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "DeedRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "registerDeed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "addDeedMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"DeedRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addDeedMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"registerDeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addDeedMetadata(uint256,string)\":{\"details\":\"Public function to add metadata to a deed\",\"params\":{\"_tokenId\":\"represents a specific deed\",\"_uri\":\"text which describes the characteristics of a given deed\"},\"return\":\"whether the deed metadata was added to the repository\"},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token IDThe zero address indicates there is no approved address.There can only be one approved address per token at a given time.Can only be called by the token owner or an approved operator.\",\"params\":{\"_to\":\"address to be approved for the given token ID\",\"_tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"_owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"constructor\":{\"details\":\"Created a DeedRepository with a name and symbol\",\"params\":{\"_name\":\"string represents the name of the repository\",\"_symbol\":\"string represents the symbol of the repository\"}},\"exists(uint256)\":{\"details\":\"Returns whether the specified token exists\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the existance of\"},\"return\":\"whether the token exists\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for a the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"_operator\":\"operator address which you want to query the approval of\",\"_owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"registerDeed(string)\":{\"details\":\"Public function to register a new deedCall the ERC721Token minter\",\"params\":{\"_uri\":\"string containing metadata/uri\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operatorAn operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"_approved\":\"representing the status of the approval to be set\",\"_to\":\"operator address to set the approval\"}},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contractReverts if the index is greater or equal to the total number of tokens\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"_owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token IDThrows if the token ID does not exist. May return an empty string.\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another addressUsage of this method is discouraged, use `safeTransferFrom` whenever possibleRequires the msg sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Repository of ERC721 Deeds This contract contains the list of deeds registered by users. This is a demo to show how tokens (deeds) can be minted and added  to the repository.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/DeedRepository.sol\":\"DeedRepository\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/DeedRepository.sol\":{\"keccak256\":\"0x54bb0cacf6c0e5c6bc3fd3247f611f26b97390c8d322bafc2a36db1d58a46061\",\"urls\":[\"bzz-raw://89506ae280f655e2a7d0f9e1bdd9eebfa299d91cbb1c619669b9c1957abcfb66\",\"dweb:/ipfs/QmWmDh5UAgX1jchoC8mQpcx2AEtENvk5mjPAbpquQQFJND\"]},\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/ERC721/DeprecatedERC721.sol\":{\"keccak256\":\"0x4b55208e4b9baea0f04c28ddcfb2674852f28c6c444589fd7ad415299f85cbfc\",\"urls\":[\"bzz-raw://af30ac1bf61de00e3b6d443156f4089fcfea3ec7b034d32f982fe076b335e3c5\",\"dweb:/ipfs/QmRRE6Tey7EU71RnSX63he6c3dd54MPYnJKQfxS1k5NCX2\"]},\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/ERC721/ERC721.sol\":{\"keccak256\":\"0xa79bb4fc830bfa1f1c2e95a4cf909f004fff660f8b1487990bea7fe32313fbad\",\"urls\":[\"bzz-raw://15e5ac312749253257596c623b88dc07cfb8ed7028e87dc5bbd69a49a5858748\",\"dweb:/ipfs/QmP9hGe8dnQHQ7CjAEYGMHjfqJo7oC8MJWSJRThkTo5zns\"]},\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/ERC721/ERC721Basic.sol\":{\"keccak256\":\"0x7187ac0c9df8d88cfff175fb6129dae9285940f5b0c3a9e3ab8c3f799791ab9b\",\"urls\":[\"bzz-raw://f05014dd053db1e23f629a2a79f01449df9857b949772c9cd1f3f409f2082db0\",\"dweb:/ipfs/QmXqMb9X66HqPU9U3MXr29GaWB49fBSzjCrZ5ZT4ZsEBeJ\"]},\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/ERC721/ERC721BasicToken.sol\":{\"keccak256\":\"0xce37bfbfa9a1a9f5bb85b77b88c0a2baf678a8414b087368d5be56b04886bf30\",\"urls\":[\"bzz-raw://d5174210b0085b3c8c95e9835eee7d5c6711d57ddd6ca304199e28c32b95bcac\",\"dweb:/ipfs/QmV7x4crVm2DwMJUo2FojhA1UaG3AWaDz2HEYhpzSiJ3Hp\"]},\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/ERC721/ERC721Receiver.sol\":{\"keccak256\":\"0xc2845803cef37cf269c2ca1e2c2e502002cfb1f7d2943a4d3243cb15f1dd2311\",\"urls\":[\"bzz-raw://edc76dc68a395062d9e34d0bb406b68da9d1120a70d078993e6d5e451fb742cb\",\"dweb:/ipfs/QmRsnmA7LraVzH3DLLRLVJevLL479FbckRBT2ATAsjV38W\"]},\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/ERC721/ERC721Token.sol\":{\"keccak256\":\"0x9f788a8d523f5fa751bc934ee53d3c83eebf37dcf93d38f3c56d66dc9bb86526\",\"urls\":[\"bzz-raw://b0a504f54e444e7384ca7f5401a740c3ae3b5ec7e7469dae600b97e75d006b65\",\"dweb:/ipfs/QmdEk8FsQJ2DnZ7esGKwYwyLARkuHE6yQVbHsPUwn1kjYt\"]},\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x6a38d1c7e6a6a3f09b52c46fe82c3ab7f09ec9b812d145d74f19784718e0364d\",\"urls\":[\"bzz-raw://b67df21f0417bdc8e9b69774784b6749b672f770b55e03ad256f3abfb98ca4a0\",\"dweb:/ipfs/QmXhzkMLJ77i3roUa1FXZcXFHGVd7ixdXwgjakErYRPN5D\"]},\"/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd9f239f900dc80ac665b12cae9ecdfeadf7f6bb65044e3b78d6d6f07308cba91\",\"urls\":[\"bzz-raw://f4b5d22ad45d00aa71e8d0175a814fdc0ff2e350a9599709866b61dc6498becb\",\"dweb:/ipfs/Qmd4fABJd5kqKgNYG8dBSRfFCZiVocwT3Uppwi3YiZRx9G\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80634f6ccce7116100ad578063b88d4fde11610071578063b88d4fde1461069d578063c87b56dd146107a2578063d082e38114610849578063da55603314610867578063e985e9c51461094457610121565b80634f6ccce7146104c25780636352211e1461050457806370a082311461057257806395d89b41146105ca578063a22cb4651461064d57610121565b806323b872dd116100f457806323b872dd146102835780632f745c59146102f157806342842e0e146103535780634b1a861f146103c15780634f558e791461047c57610121565b806306fdde0314610126578063081812fc146101a9578063095ea7b31461021757806318160ddd14610265575b600080fd5b61012e6109c0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d5600480360360208110156101bf57600080fd5b8101908080359060200190929190505050610a62565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102636004803603604081101561022d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9f565b005b61026d610c61565b6040518082815260200191505060405180910390f35b6102ef6004803603606081101561029957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c6e565b005b61033d6004803603604081101561030757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d7f565b6040518082815260200191505060405180910390f35b6103bf6004803603606081101561036957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610df2565b005b61047a600480360360208110156103d757600080fd5b81019080803590602001906401000000008111156103f457600080fd5b82018360208201111561040657600080fd5b8035906020019184600183028401116401000000008311171561042857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e27565b005b6104a86004803603602081101561049257600080fd5b8101908080359060200190929190505050610ec4565b604051808215151515815260200191505060405180910390f35b6104ee600480360360208110156104d857600080fd5b8101908080359060200190929190505050610f35565b6040518082815260200191505060405180910390f35b6105306004803603602081101561051a57600080fd5b8101908080359060200190929190505050610f69565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105b46004803603602081101561058857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe4565b6040518082815260200191505060405180910390f35b6105d2611066565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106125780820151818401526020810190506105f7565b50505050905090810190601f16801561063f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61069b6004803603604081101561066357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611108565b005b6107a0600480360360808110156106b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561071a57600080fd5b82018360208201111561072c57600080fd5b8035906020019184600183028401116401000000008311171561074e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611242565b005b6107ce600480360360208110156107b857600080fd5b810190808035906020019092919050505061127d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5780820151818401526020810190506107f3565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610851611344565b6040518082815260200191505060405180910390f35b61092a6004803603604081101561087d57600080fd5b8101908080359060200190929190803590602001906401000000008111156108a457600080fd5b8201836020820111156108b657600080fd5b803590602001918460018302840111640100000000831117156108d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061134a565b604051808215151515815260200191505060405180910390f35b6109a66004803603604081101561095a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611360565b604051808215151515815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a585780601f10610a2d57610100808354040283529160200191610a58565b820191906000526020600020905b815481529060010190602001808311610a3b57829003601f168201915b5050505050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610aaa82610f69565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ae557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b255750610b248133611360565b5b610b2e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610b4f83610a62565b73ffffffffffffffffffffffffffffffffffffffff16141580610b9f5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610c5c57826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000600880549050905090565b80610c7933826113f4565b610c8257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610cbc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cf657600080fd5b610d008483611489565b610d0a84836115ee565b610d148383611801565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6000610d8a83610fe4565b8210610d9557600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ddf57fe5b9060005260206000200154905092915050565b80610dfd33826113f4565b610e0657600080fd5b610e2184848460405180602001604052806000815250611242565b50505050565b6000600b549050610e3833826118d8565b610e42818361134a565b507f32cc5b866d6a5990a7f987020b639157969cb963b9beb2cdf41df22ab152df353382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600b600081548092919060010191905055505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610f3f610c61565b8210610f4a57600080fd5b60088281548110610f5757fe5b90600052602060002001549050919050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fdb57600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561101f57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110fe5780601f106110d3576101008083540402835291602001916110fe565b820191906000526020600020905b8154815290600101906020018083116110e157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561114157600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b8161124d33826113f4565b61125657600080fd5b611261858585610c6e565b61126d8585858561192f565b61127657600080fd5b5050505050565b606061128882610ec4565b61129157600080fd5b600a60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113385780601f1061130d57610100808354040283529160200191611338565b820191906000526020600020905b81548152906001019060200180831161131b57829003601f168201915b50505050509050919050565b600b5481565b60006113568383611ae4565b6001905092915050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008061140083610f69565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061146f57508373ffffffffffffffffffffffffffffffffffffffff1661145784610a62565b73ffffffffffffffffffffffffffffffffffffffff16145b80611480575061147f8185611360565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166114a982610f69565b73ffffffffffffffffffffffffffffffffffffffff16146114c957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115ea5760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b6115f88282611b22565b60006007600083815260200190815260200160002054905060006116686001600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611c4e90919063ffffffff16565b90506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106116b657fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061170e57fe5b90600052602060002001819055506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061176857fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036117c89190611e98565b50600060076000868152602001908152602001600020819055508260076000838152602001908152602001600020819055505050505050565b61180b8282611c65565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806007600084815260200190815260200160002081905550505050565b6118e28282611dbb565b600880549050600960008381526020019081526020016000208190555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60006119508473ffffffffffffffffffffffffffffffffffffffff16611e69565b61195d5760019050611adc565b60008473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611a055780820151818401526020810190506119ea565b50505050905090810190601f168015611a325780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611a5357600080fd5b505af1158015611a67573d6000803e3d6000fd5b505050506040513d6020811015611a7d57600080fd5b8101908080519060200190929190505050905063f0b9e5ba60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b611aed82610ec4565b611af657600080fd5b80600a60008481526020019081526020016000209080519060200190611b1d929190611ec4565b505050565b8173ffffffffffffffffffffffffffffffffffffffff16611b4282610f69565b73ffffffffffffffffffffffffffffffffffffffff1614611b6257600080fd5b611bb56001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c4e90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115611c5a57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cd057600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d746001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e7c90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611df557600080fd5b611dff8282611801565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080823b905060008111915050919050565b600080828401905083811015611e8e57fe5b8091505092915050565b815481835581811115611ebf57818360005260206000209182019101611ebe9190611f44565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f0557805160ff1916838001178555611f33565b82800160010185558215611f33579182015b82811115611f32578251825591602001919060010190611f17565b5b509050611f409190611f44565b5090565b611f6691905b80821115611f62576000816000905550600101611f4a565b5090565b9056fea265627a7a723158203e9e881b5a3f38f1337ea72b704339539a4d6b86912b2c306d6cb605171669e564736f6c63430005100032",
  "sourceMap": "263:1456:0:-;;;549:127;8:9:-1;5:2;;;30:1;27;20:12;5:2;549:127:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;549:127:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;549:127:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;549:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;549:127:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;549:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:5;640:7;1183:5:7;1175;:13;;;;;;;;;;;;:::i;:::-;;1204:7;1194;:17;;;;;;;;;;;;:::i;:::-;;1106:110;;668:1:0;653:12;:16;;;;549:127;;263:1456;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "263:1456:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:1456:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1307:75:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1307:75:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3586:111:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3586:111:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3002:355;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3002:355:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2557:87:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5055:316:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5055:316:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2241:177:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2241:177:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5978:180:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5978:180:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;839:233:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;839:233:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;839:233:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;839:233:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;839:233:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;839:233:0;;;;;;;;;;;;;;;:::i;:::-;;2449:140:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2449:140:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2968::7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2968:140:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2111:164:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2111:164:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1760:142;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1760:142:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1477:79:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1477:79:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3977:205:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3977:205:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6834:264;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6834:264:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6834:264:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6834:264:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6834:264:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6834:264:4;;;;;;;;;;;;;;;:::i;:::-;;1745:140:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1745:140:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1745:140:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:27:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1338:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1338:149:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1338:149:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1338:149:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1338:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1338:149:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4491:142:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4491:142:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1307:75:7;1344:13;1372:5;1365:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1307:75;:::o;3586:111:4:-;3646:7;3668:14;:24;3683:8;3668:24;;;;;;;;;;;;;;;;;;;;;3661:31;;3586:111;;;:::o;3002:355::-;3063:13;3079:17;3087:8;3079:7;:17::i;:::-;3063:33;;3117:5;3110:12;;:3;:12;;;;3102:21;;;;;;3151:5;3137:19;;:10;:19;;;:58;;;;3160:35;3177:5;3184:10;3160:16;:35::i;:::-;3137:58;3129:67;;;;;;3240:1;3207:35;;:21;3219:8;3207:11;:21::i;:::-;:35;;;;:56;;;;3261:1;3246:17;;:3;:17;;;;3207:56;3203:150;;;3300:3;3273:14;:24;3288:8;3273:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3332:3;3316:30;;3325:5;3316:30;;;3337:8;3316:30;;;;;;;;;;;;;;;;;;3203:150;3002:355;;;:::o;2557:87:7:-;2601:7;2623:9;:16;;;;2616:23;;2557:87;:::o;5055:316:4:-;5142:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;5183:1;5166:19;;:5;:19;;;;5158:28;;;;;;5215:1;5200:17;;:3;:17;;;;5192:26;;;;;;5225:30;5239:5;5246:8;5225:13;:30::i;:::-;5261:32;5277:5;5284:8;5261:15;:32::i;:::-;5299:25;5310:3;5315:8;5299:10;:25::i;:::-;5352:3;5336:30;;5345:5;5336:30;;;5357:8;5336:30;;;;;;;;;;;;;;;;;;5055:316;;;;:::o;2241:177:7:-;2323:7;2355:17;2365:6;2355:9;:17::i;:::-;2346:6;:26;2338:35;;;;;;2386:11;:19;2398:6;2386:19;;;;;;;;;;;;;;;2406:6;2386:27;;;;;;;;;;;;;;;;2379:34;;2241:177;;;;:::o;5978:180:4:-;6093:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;6111:42;6128:5;6135:3;6140:8;6111:42;;;;;;;;;;;;:16;:42::i;:::-;5978:180;;;;:::o;839:233:0:-;892:15;910:12;;892:30;;932:26;938:10;950:7;932:5;:26::i;:::-;968:30;984:7;993:4;968:15;:30::i;:::-;;1013:35;1028:10;1040:7;1013:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:12;;:14;;;;;;;;;;;;;839:233;;:::o;2449:140:4:-;2504:4;2516:13;2532:10;:20;2543:8;2532:20;;;;;;;;;;;;;;;;;;;;;2516:36;;2582:1;2565:19;;:5;:19;;;;2558:26;;;2449:140;;;:::o;2968::7:-;3027:7;3059:13;:11;:13::i;:::-;3050:6;:22;3042:31;;;;;;3086:9;3096:6;3086:17;;;;;;;;;;;;;;;;3079:24;;2968:140;;;:::o;2111:164:4:-;2167:7;2182:13;2198:10;:20;2209:8;2198:20;;;;;;;;;;;;;;;;;;;;;2182:36;;2249:1;2232:19;;:5;:19;;;;2224:28;;;;;;2265:5;2258:12;;;2111:164;;;:::o;1760:142::-;1816:7;1857:1;1839:20;;:6;:20;;;;1831:29;;;;;;1873:16;:24;1890:6;1873:24;;;;;;;;;;;;;;;;1866:31;;1760:142;;;:::o;1477:79:7:-;1516:13;1544:7;1537:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1477:79;:::o;3977:205:4:-;4061:10;4054:17;;:3;:17;;;;4046:26;;;;;;4115:9;4078:17;:29;4096:10;4078:29;;;;;;;;;;;;;;;:34;4108:3;4078:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;4162:3;4135:42;;4150:10;4135:42;;;4167:9;4135:42;;;;;;;;;;;;;;;;;;;;;;3977:205;;:::o;6834:264::-;6973:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;6991:34;7004:5;7011:3;7016:8;6991:12;:34::i;:::-;7039:53;7064:5;7071:3;7076:8;7086:5;7039:24;:53::i;:::-;7031:62;;;;;;6834:264;;;;;:::o;1745:140:7:-;1802:13;1831:16;1838:8;1831:6;:16::i;:::-;1823:25;;;;;;1861:9;:19;1871:8;1861:19;;;;;;;;;;;1854:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1745:140;;;:::o;308:27:0:-;;;;:::o;1338:149::-;1416:4;1431:28;1444:8;1454:4;1431:12;:28::i;:::-;1476:4;1469:11;;1338:149;;;;:::o;4491:142:4:-;4573:4;4592:17;:25;4610:6;4592:25;;;;;;;;;;;;;;;:36;4618:9;4592:36;;;;;;;;;;;;;;;;;;;;;;;;;4585:43;;4491:142;;;;:::o;7445:240::-;7531:4;7543:13;7559:17;7567:8;7559:7;:17::i;:::-;7543:33;;7601:5;7589:17;;:8;:17;;;:54;;;;7635:8;7610:33;;:21;7622:8;7610:11;:21::i;:::-;:33;;;7589:54;:91;;;;7647:33;7664:5;7671:8;7647:16;:33::i;:::-;7589:91;7582:98;;;7445:240;;;;:::o;8740:265::-;8841:6;8820:27;;:17;8828:8;8820:7;:17::i;:::-;:27;;;8812:36;;;;;;8894:1;8858:38;;:14;:24;8873:8;8858:24;;;;;;;;;;;;;;;;;;;;;:38;;;8854:147;;8941:1;8906:14;:24;8921:8;8906:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8981:1;8956:38;;8965:6;8956:38;;;8985:8;8956:38;;;;;;;;;;;;;;;;;;8854:147;8740:265;;:::o;4230:856:7:-;4303:38;4325:5;4332:8;4303:21;:38::i;:::-;4348:18;4369:16;:26;4386:8;4369:26;;;;;;;;;;;;4348:47;;4401:22;4426:32;4456:1;4426:11;:18;4438:5;4426:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;4401:57;;4464:17;4484:11;:18;4496:5;4484:18;;;;;;;;;;;;;;;4503:14;4484:34;;;;;;;;;;;;;;;;4464:54;;4558:9;4525:11;:18;4537:5;4525:18;;;;;;;;;;;;;;;4544:10;4525:30;;;;;;;;;;;;;;;:42;;;;4610:1;4573:11;:18;4585:5;4573:18;;;;;;;;;;;;;;;4592:14;4573:34;;;;;;;;;;;;;;;:38;;;;4972:11;:18;4984:5;4972:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5034:1;5005:16;:26;5022:8;5005:26;;;;;;;;;;;:30;;;;5071:10;5041:16;:27;5058:9;5041:27;;;;;;;;;;;:40;;;;4230:856;;;;;:::o;3729:226::-;3795:31;3812:3;3817:8;3795:16;:31::i;:::-;3832:14;3849:11;:16;3861:3;3849:16;;;;;;;;;;;;;;;:23;;;;3832:40;;3878:11;:16;3890:3;3878:16;;;;;;;;;;;;;;;3900:8;3878:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3878:31:7;;;;;;;;;;;;;;;;;;;;;;3944:6;3915:16;:26;3932:8;3915:26;;;;;;;;;;;:35;;;;3729:226;;;:::o;5347:172::-;5408:26;5420:3;5425:8;5408:11;:26::i;:::-;5468:9;:16;;;;5441:14;:24;5456:8;5441:24;;;;;;;;;;;:43;;;;5490:9;5505:8;5490:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5490:24:7;;;;;;;;;;;;;;;;;;;;;;5347:172;;:::o;10460:335:4:-;10606:4;10625:16;:3;:14;;;:16::i;:::-;10620:49;;10658:4;10651:11;;;;10620:49;10674:13;10705:3;10690:36;;;10727:5;10734:8;10744:5;10690:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10690:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10690:60:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10690:60:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10690:60:4;;;;;;;;;;;;;;;;10674:76;;610:10;10774:15;;10764:25;;;:6;:25;;;;10756:34;;;10460:335;;;;;;;:::o;3333:137:7:-;3416:16;3423:8;3416:6;:16::i;:::-;3408:25;;;;;;3461:4;3439:9;:19;3449:8;3439:19;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;3333:137;;:::o;9743:214:4:-;9845:5;9824:26;;:17;9832:8;9824:7;:17::i;:::-;:26;;;9816:35;;;;;;9883:30;9911:1;9883:16;:23;9900:5;9883:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;9857:16;:23;9874:5;9857:23;;;;;;;;;;;;;;;:56;;;;9950:1;9919:10;:20;9930:8;9919:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9743:214;;:::o;842:110:10:-;900:7;927:1;922;:6;;915:14;;;;946:1;942;:5;935:12;;842:110;;;;:::o;9264:204:4:-;9370:1;9338:34;;:10;:20;9349:8;9338:20;;;;;;;;;;;;;;;;;;;;;:34;;;9330:43;;;;;;9402:3;9379:10;:20;9390:8;9379:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9435:28;9461:1;9435:16;:21;9452:3;9435:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9411:16;:21;9428:3;9411:21;;;;;;;;;;;;;;;:52;;;;9264:204;;:::o;7934:169::-;8018:1;8003:17;;:3;:17;;;;7995:26;;;;;;8027:25;8038:3;8043:8;8027:10;:25::i;:::-;8084:3;8063:35;;8080:1;8063:35;;;8089:8;8063:35;;;;;;;;;;;;;;;;;;7934:169;;:::o;438:568:8:-;495:4;507:12;922:4;910:17;902:25;;1000:1;993:4;:8;986:15;;;438:568;;;:::o;1014:129:10:-;1072:7;1087:9;1103:1;1099;:5;1087:17;;1122:1;1117;:6;;1110:14;;;;1137:1;1130:8;;;1014:129;;;;:::o;263:1456:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\nimport \"./ERC721/ERC721Token.sol\";\n\n/**\n * @title Repository of ERC721 Deeds\n * This contract contains the list of deeds registered by users.\n * This is a demo to show how tokens (deeds) can be minted and added \n * to the repository.\n */\ncontract DeedRepository is ERC721Token {\n    uint256 public tokenCounter;\n\t\n    /**\n    * @dev Created a DeedRepository with a name and symbol\n    * @param _name string represents the name of the repository\n    * @param _symbol string represents the symbol of the repository\n    */\n    constructor(string memory _name, string memory _symbol) \n        public ERC721Token(_name, _symbol) {\n\t tokenCounter = 0;\n    }\n    \n    /**\n    * @dev Public function to register a new deed\n    * @dev Call the ERC721Token minter\n    * @param _uri string containing metadata/uri\n    */\n    function registerDeed(string memory _uri) public {\n\t uint256 tokenId = tokenCounter;\n        _mint(msg.sender, tokenId);\n        addDeedMetadata(tokenId, _uri);\n        emit DeedRegistered(msg.sender, tokenId);\n\ttokenCounter++;\n    }\n\n    /**\n    * @dev Public function to add metadata to a deed\n    * @param _tokenId represents a specific deed\n    * @param _uri text which describes the characteristics of a given deed\n    * @return whether the deed metadata was added to the repository\n    */\n    function addDeedMetadata(uint256 _tokenId, string memory _uri) public returns(bool){\n        _setTokenURI(_tokenId, _uri);\n        return true;\n    }\n\n    /**\n    * @dev Event is triggered if deed/token is registered\n    * @param _by address of the registrar\n    * @param _tokenId uint256 represents a specific deed\n    */\n    event DeedRegistered(address _by, uint256 _tokenId);\n}\n",
  "sourcePath": "C:/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/DeedRepository.sol",
  "ast": {
    "absolutePath": "/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/DeedRepository.sol",
    "exportedSymbols": {
      "DeedRepository": [
        76
      ]
    },
    "id": 77,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/ERC721/ERC721Token.sol",
        "file": "./ERC721/ERC721Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 1255,
        "src": "25:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1254,
              "src": "290:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1254",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "290:11:0"
          }
        ],
        "contractDependencies": [
          129,
          149,
          156,
          263,
          846,
          1254
        ],
        "contractKind": "contract",
        "documentation": "@title Repository of ERC721 Deeds\nThis contract contains the list of deeds registered by users.\nThis is a demo to show how tokens (deeds) can be minted and added \nto the repository.",
        "fullyImplemented": true,
        "id": 76,
        "linearizedBaseContracts": [
          76,
          1254,
          846,
          156,
          149,
          129,
          263
        ],
        "name": "DeedRepository",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "tokenCounter",
            "nodeType": "VariableDeclaration",
            "scope": 76,
            "src": "308:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "649:27:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "653:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "668:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "653:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "653:16:0"
                }
              ]
            },
            "documentation": "@dev Created a DeedRepository with a name and symbol\n@param _name string represents the name of the repository\n@param _symbol string represents the symbol of the repository",
            "id": 22,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "633:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 14,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "640:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 15,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1254,
                  "src": "621:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1254_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "621:27:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "561:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "582:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "560:44:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "649:0:0"
            },
            "scope": 76,
            "src": "549:127:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "888:184:0",
              "statements": [
                {
                  "assignments": [
                    28
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 51,
                      "src": "892:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "892:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 30,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 29,
                    "name": "tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "910:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "892:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2724,
                          "src": "938:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "938:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "950:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1174
                      ],
                      "referencedDeclaration": 1174,
                      "src": "932:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "932:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "932:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "984:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "993:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 37,
                      "name": "addDeedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "968:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "968:30:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 43,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2724,
                          "src": "1028:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1028:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1040:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42,
                      "name": "DeedRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1013:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "EmitStatement",
                  "src": "1008:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1051:14:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1051:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:14:0"
                }
              ]
            },
            "documentation": "@dev Public function to register a new deed\n@dev Call the ERC721Token minter\n@param _uri string containing metadata/uri",
            "id": 52,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerDeed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "861:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "860:20:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:0"
            },
            "scope": 76,
            "src": "839:233:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1421:66:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1444:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1454:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 61,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "1431:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1476:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 60,
                  "id": 67,
                  "nodeType": "Return",
                  "src": "1469:11:0"
                }
              ]
            },
            "documentation": "@dev Public function to add metadata to a deed\n@param _tokenId represents a specific deed\n@param _uri text which describes the characteristics of a given deed\n@return whether the deed metadata was added to the repository",
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDeedMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1363:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1381:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1362:38:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1416:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1416:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1415:6:0"
            },
            "scope": 76,
            "src": "1338:149:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev Event is triggered if deed/token is registered\n@param _by address of the registrar\n@param _tokenId uint256 represents a specific deed",
            "id": 75,
            "name": "DeedRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "name": "_by",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1686:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1699:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1685:31:0"
            },
            "src": "1665:52:0"
          }
        ],
        "scope": 77,
        "src": "263:1456:0"
      }
    ],
    "src": "0:1720:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/DeedRepository.sol",
      "exportedSymbols": {
        "DeedRepository": [
          76
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "attributes": {
          "SourceUnit": 1255,
          "absolutePath": "/C/Users/root/Desktop/Udemy Solidity Developer Guide/NFT/contracts/ERC721/ERC721Token.sol",
          "file": "./ERC721/ERC721Token.sol",
          "scope": 77,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "25:34:0"
      },
      {
        "attributes": {
          "contractDependencies": [
            129,
            149,
            156,
            263,
            846,
            1254
          ],
          "contractKind": "contract",
          "documentation": "@title Repository of ERC721 Deeds\nThis contract contains the list of deeds registered by users.\nThis is a demo to show how tokens (deeds) can be minted and added \nto the repository.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            76,
            1254,
            846,
            156,
            149,
            129,
            263
          ],
          "name": "DeedRepository",
          "scope": 77
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Token",
                  "referencedDeclaration": 1254,
                  "type": "contract ERC721Token"
                },
                "id": 3,
                "name": "UserDefinedTypeName",
                "src": "290:11:0"
              }
            ],
            "id": 4,
            "name": "InheritanceSpecifier",
            "src": "290:11:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "tokenCounter",
              "scope": 76,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 5,
                "name": "ElementaryTypeName",
                "src": "308:7:0"
              }
            ],
            "id": 6,
            "name": "VariableDeclaration",
            "src": "308:27:0"
          },
          {
            "attributes": {
              "documentation": "@dev Created a DeedRepository with a name and symbol\n@param _name string represents the name of the repository\n@param _symbol string represents the symbol of the repository",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 76,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 22,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7,
                        "name": "ElementaryTypeName",
                        "src": "561:6:0"
                      }
                    ],
                    "id": 8,
                    "name": "VariableDeclaration",
                    "src": "561:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 22,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 9,
                        "name": "ElementaryTypeName",
                        "src": "582:6:0"
                      }
                    ],
                    "id": 10,
                    "name": "VariableDeclaration",
                    "src": "582:21:0"
                  }
                ],
                "id": 11,
                "name": "ParameterList",
                "src": "560:44:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 16,
                "name": "ParameterList",
                "src": "649:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1254,
                      "type": "type(contract ERC721Token)",
                      "value": "ERC721Token"
                    },
                    "id": 12,
                    "name": "Identifier",
                    "src": "621:11:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8,
                      "type": "string memory",
                      "value": "_name"
                    },
                    "id": 13,
                    "name": "Identifier",
                    "src": "633:5:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 10,
                      "type": "string memory",
                      "value": "_symbol"
                    },
                    "id": 14,
                    "name": "Identifier",
                    "src": "640:7:0"
                  }
                ],
                "id": 15,
                "name": "ModifierInvocation",
                "src": "621:27:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6,
                              "type": "uint256",
                              "value": "tokenCounter"
                            },
                            "id": 17,
                            "name": "Identifier",
                            "src": "653:12:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 18,
                            "name": "Literal",
                            "src": "668:1:0"
                          }
                        ],
                        "id": 19,
                        "name": "Assignment",
                        "src": "653:16:0"
                      }
                    ],
                    "id": 20,
                    "name": "ExpressionStatement",
                    "src": "653:16:0"
                  }
                ],
                "id": 21,
                "name": "Block",
                "src": "649:27:0"
              }
            ],
            "id": 22,
            "name": "FunctionDefinition",
            "src": "549:127:0"
          },
          {
            "attributes": {
              "documentation": "@dev Public function to register a new deed\n@dev Call the ERC721Token minter\n@param _uri string containing metadata/uri",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerDeed",
              "scope": 76,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 23,
                        "name": "ElementaryTypeName",
                        "src": "861:6:0"
                      }
                    ],
                    "id": 24,
                    "name": "VariableDeclaration",
                    "src": "861:18:0"
                  }
                ],
                "id": 25,
                "name": "ParameterList",
                "src": "860:20:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 26,
                "name": "ParameterList",
                "src": "888:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        28
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "tokenId",
                          "scope": 51,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27,
                            "name": "ElementaryTypeName",
                            "src": "892:7:0"
                          }
                        ],
                        "id": 28,
                        "name": "VariableDeclaration",
                        "src": "892:15:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 6,
                          "type": "uint256",
                          "value": "tokenCounter"
                        },
                        "id": 29,
                        "name": "Identifier",
                        "src": "910:12:0"
                      }
                    ],
                    "id": 30,
                    "name": "VariableDeclarationStatement",
                    "src": "892:30:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1174
                              ],
                              "referencedDeclaration": 1174,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 31,
                            "name": "Identifier",
                            "src": "932:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2724,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 32,
                                "name": "Identifier",
                                "src": "938:3:0"
                              }
                            ],
                            "id": 33,
                            "name": "MemberAccess",
                            "src": "938:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 34,
                            "name": "Identifier",
                            "src": "950:7:0"
                          }
                        ],
                        "id": 35,
                        "name": "FunctionCall",
                        "src": "932:26:0"
                      }
                    ],
                    "id": 36,
                    "name": "ExpressionStatement",
                    "src": "932:26:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 69,
                              "type": "function (uint256,string memory) returns (bool)",
                              "value": "addDeedMetadata"
                            },
                            "id": 37,
                            "name": "Identifier",
                            "src": "968:15:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 38,
                            "name": "Identifier",
                            "src": "984:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 39,
                            "name": "Identifier",
                            "src": "993:4:0"
                          }
                        ],
                        "id": 40,
                        "name": "FunctionCall",
                        "src": "968:30:0"
                      }
                    ],
                    "id": 41,
                    "name": "ExpressionStatement",
                    "src": "968:30:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 75,
                              "type": "function (address,uint256)",
                              "value": "DeedRegistered"
                            },
                            "id": 42,
                            "name": "Identifier",
                            "src": "1013:14:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2724,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 43,
                                "name": "Identifier",
                                "src": "1028:3:0"
                              }
                            ],
                            "id": 44,
                            "name": "MemberAccess",
                            "src": "1028:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 45,
                            "name": "Identifier",
                            "src": "1040:7:0"
                          }
                        ],
                        "id": 46,
                        "name": "FunctionCall",
                        "src": "1013:35:0"
                      }
                    ],
                    "id": 47,
                    "name": "EmitStatement",
                    "src": "1008:40:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6,
                              "type": "uint256",
                              "value": "tokenCounter"
                            },
                            "id": 48,
                            "name": "Identifier",
                            "src": "1051:12:0"
                          }
                        ],
                        "id": 49,
                        "name": "UnaryOperation",
                        "src": "1051:14:0"
                      }
                    ],
                    "id": 50,
                    "name": "ExpressionStatement",
                    "src": "1051:14:0"
                  }
                ],
                "id": 51,
                "name": "Block",
                "src": "888:184:0"
              }
            ],
            "id": 52,
            "name": "FunctionDefinition",
            "src": "839:233:0"
          },
          {
            "attributes": {
              "documentation": "@dev Public function to add metadata to a deed\n@param _tokenId represents a specific deed\n@param _uri text which describes the characteristics of a given deed\n@return whether the deed metadata was added to the repository",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addDeedMetadata",
              "scope": 76,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 69,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 53,
                        "name": "ElementaryTypeName",
                        "src": "1363:7:0"
                      }
                    ],
                    "id": 54,
                    "name": "VariableDeclaration",
                    "src": "1363:16:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 69,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 55,
                        "name": "ElementaryTypeName",
                        "src": "1381:6:0"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "1381:18:0"
                  }
                ],
                "id": 57,
                "name": "ParameterList",
                "src": "1362:38:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 69,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 58,
                        "name": "ElementaryTypeName",
                        "src": "1416:4:0"
                      }
                    ],
                    "id": 59,
                    "name": "VariableDeclaration",
                    "src": "1416:4:0"
                  }
                ],
                "id": 60,
                "name": "ParameterList",
                "src": "1415:6:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1038,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 61,
                            "name": "Identifier",
                            "src": "1431:12:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 54,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 62,
                            "name": "Identifier",
                            "src": "1444:8:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 56,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 63,
                            "name": "Identifier",
                            "src": "1454:4:0"
                          }
                        ],
                        "id": 64,
                        "name": "FunctionCall",
                        "src": "1431:28:0"
                      }
                    ],
                    "id": 65,
                    "name": "ExpressionStatement",
                    "src": "1431:28:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 60
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 66,
                        "name": "Literal",
                        "src": "1476:4:0"
                      }
                    ],
                    "id": 67,
                    "name": "Return",
                    "src": "1469:11:0"
                  }
                ],
                "id": 68,
                "name": "Block",
                "src": "1421:66:0"
              }
            ],
            "id": 69,
            "name": "FunctionDefinition",
            "src": "1338:149:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": "@dev Event is triggered if deed/token is registered\n@param _by address of the registrar\n@param _tokenId uint256 represents a specific deed",
              "name": "DeedRegistered"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_by",
                      "scope": 75,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 70,
                        "name": "ElementaryTypeName",
                        "src": "1686:7:0"
                      }
                    ],
                    "id": 71,
                    "name": "VariableDeclaration",
                    "src": "1686:11:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_tokenId",
                      "scope": 75,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 72,
                        "name": "ElementaryTypeName",
                        "src": "1699:7:0"
                      }
                    ],
                    "id": 73,
                    "name": "VariableDeclaration",
                    "src": "1699:16:0"
                  }
                ],
                "id": 74,
                "name": "ParameterList",
                "src": "1685:31:0"
              }
            ],
            "id": 75,
            "name": "EventDefinition",
            "src": "1665:52:0"
          }
        ],
        "id": 76,
        "name": "ContractDefinition",
        "src": "263:1456:0"
      }
    ],
    "id": 77,
    "name": "SourceUnit",
    "src": "0:1720:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xeE20E9cFdf0df7FdFe5c64FB64A3F085A76cEa1C",
      "transactionHash": "0xfc7bf0c14899440f99e5ec1e1609f0f847ada9f7959c5f1dd3acf6cb1f3d6eb3"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-10T10:53:45.517Z",
  "devdoc": {
    "methods": {
      "addDeedMetadata(uint256,string)": {
        "details": "Public function to add metadata to a deed",
        "params": {
          "_tokenId": "represents a specific deed",
          "_uri": "text which describes the characteristics of a given deed"
        },
        "return": "whether the deed metadata was added to the repository"
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token IDThe zero address indicates there is no approved address.There can only be one approved address per token at a given time.Can only be called by the token owner or an approved operator.",
        "params": {
          "_to": "address to be approved for the given token ID",
          "_tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "_owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "constructor": {
        "details": "Created a DeedRepository with a name and symbol",
        "params": {
          "_name": "string represents the name of the repository",
          "_symbol": "string represents the symbol of the repository"
        }
      },
      "exists(uint256)": {
        "details": "Returns whether the specified token exists",
        "params": {
          "_tokenId": "uint256 ID of the token to query the existance of"
        },
        "return": "whether the token exists"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set",
        "params": {
          "_tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for a the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "_operator": "operator address which you want to query the approval of",
          "_owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "_tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "registerDeed(string)": {
        "details": "Public function to register a new deedCall the ERC721Token minter",
        "params": {
          "_uri": "string containing metadata/uri"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operatorAn operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "_approved": "representing the status of the approval to be set",
          "_to": "operator address to set the approval"
        }
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contractReverts if the index is greater or equal to the total number of tokens",
        "params": {
          "_index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "_index": "uint256 representing the index to be accessed of the requested tokens list",
          "_owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token IDThrows if the token ID does not exist. May return an empty string.",
        "params": {
          "_tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another addressUsage of this method is discouraged, use `safeTransferFrom` whenever possibleRequires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Repository of ERC721 Deeds This contract contains the list of deeds registered by users. This is a demo to show how tokens (deeds) can be minted and added  to the repository."
  },
  "userdoc": {
    "methods": {}
  }
}